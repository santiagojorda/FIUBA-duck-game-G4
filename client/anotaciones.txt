 // ---------------------------- Draw Player ----------------------------
            // Primer Rect (x, y, w, h): (x, y) toman una coordenada de la imagen (w, h) le
            // indicamos el alto y ancho Segundo Rect (x, y, w, h): le indicamos en que parte de la
            // pantalla aparece, y el tamaño

  // ---------------------------- Si el pato pasa la pantalla... ----------------------------
 // Esto sirve por si pasa la pantalla entonces muere
            // If player passes past the right or left side of the window, wrap
            /*if (position > renderer.GetOutputWidth()) {
                position = -TILE_SIZE;  // wrap from the right
            } else if (position < -TILE_SIZE) {
                position = renderer.GetOutputWidth();  // wrap from the left
            }*/

/*
            // ---------------------------- Draw PISTOLA ENCIMA DEL PATO----------------------------

            renderer.Copy(pistol_magnum, Rect(magnum_x, magnum_y, 32, 32),
                          Rect((int)position, center_y - (TILE_SIZE - 2), TILE_SIZE, TILE_SIZE),
            0.0, SDL2pp::NullOpt, flip);

            // ------------------ Draw ALA DEL PATO ENCIMA DEL PATO ------------------

            renderer.Copy(ala_duck, Rect(ALA_INITIAL_X, ALA_INITIAL_Y + (16 * 5), 16, 16),
                          Rect((int)position + 7, center_y - (TILE_SIZE) + 15, 20, 20), 0.0,
                          SDL2pp::NullOpt, flip);
            */


// ________________________-

  // ---------------------------- Draw PISO TILESET ----------------------------
            int center_y = renderer.GetOutputHeight() / 2;  // Y coordinate of window center
            int center_x = renderer.GetOutputWidth() / 2;

            // Cantidad de tiles que se necesitan de forma horizontal
            int num_tiles_x = renderer.GetOutputWidth() / TILE_SIZE + 1;
            for (int i = 0; i < num_tiles_x; ++i) {
                // Lo multiplico por 3 porque solo estoy tomando el 3 tileset en x, pero es de la
                // fila 1
                // => y = 0
                // TILE_SIZE - 42 motivo: el tamaño del pato menos ojimetro
                renderer.Copy(
                        floor, Rect(SIZE_FLOOR_SPRITE * 3, 0, SIZE_FLOOR_SPRITE, SIZE_FLOOR_SPRITE),
                        Rect(i * TILE_SIZE, center_y - (TILE_SIZE - 42), TILE_SIZE, TILE_SIZE));
            }

            // ---------------------------- Draw PISTOLA ----------------------------
            // Llamar a set_position en DrawerWeapon
            drawer_weapons[0]->set_position(center_x, center_y - 41);
            drawer_weapons[0]->draw(renderer);
